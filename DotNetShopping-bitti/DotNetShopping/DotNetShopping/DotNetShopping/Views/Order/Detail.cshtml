@model DotNetShopping.Models.OrderDetailModel
@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<h2>Detail - @DotNetShopping.Helpers.StringHelper.GetOrderNo(Model.OrderId, Model.OrderDate)</h2>
<table class="orderDetail">
    <tr>
        <td class="titleLabel">Date</td>
        <td class="detailLabel">@Model.OrderDate.ToShortDateString()</td>
        <td class="titleLabel">Status</td>
        <td class="detailLabel">@Model.OrderStatus</td>
        <td class="titleLabel">Ship To</td>
        <td class="detailLabel">@Model.ShippingFirstName @Model.ShippingLastName</td>
    </tr>
    <tr>
        <td class="titleLabel">Payment Method</td>
        <td class="detailLabel">@Model.PaymentMethodName</td>
        <td class="titleLabel">Payment</td>
        <td class="detailLabel">@(Model.Paid ? "Paid" : "Not Paid" )</td>
        <td class="titleLabel">Company</td>
        <td class="detailLabel">@Model.ShippingCompany</td>
    </tr>
    <tr>
        <td class="titleLabel">Shipping Method</td>
        <td class="detailLabel">@Model.ShippingMethodName</td>
        <td class="titleLabel">Shipping Date</td>
        <td class="detailLabel">@(Model.ShippingDate == null ? "Not Shipped" : Model.ShippingDate.Value.ToShortDateString())</td>
        <td class="titleLabel">Street</td>
        <td class="detailLabel">@Model.ShippingStreet1, @Model.ShippingStreet2</td>
    </tr>
    <tr>
        <td class="titleLabel">Shipping Cost</td>
        <td class="detailLabel">$@Model.ShippingCost</td>
        <td class="titleLabel">Discount</td>
        <td class="detailLabel">$@Model.Discount</td>
        <td class="titleLabel">City, State</td>
        <td class="detailLabel">@Model.CityName @Model.StateName</td>
    </tr>
    <tr>
        <td class="titleLabel">Total Price</td>
        <td class="detailLabel">@Model.TotalPrice</td>
        <td class="titleLabel">Telephone</td>
        <td class="detailLabel">@Model.ShippingTelephone</td>
        <td class="titleLabel">Country, Zip</td>
        <td class="detailLabel">@Model.CountryName @Model.ShippingZip</td>
    </tr>
</table>
<table class="ManageOrder">
    <caption>Manage Order</caption>
    <tr>
        <td>Status</td>
        <td>
            @switch (Model.OrderStatus)
            {
                case DotNetShopping.Models.Order.OrderStatuses.Received:
                    <button type="button" value="1" onclick="statusButtonClick(this, @Model.OrderId)">Received</button>
                    break;
                case DotNetShopping.Models.Order.OrderStatuses.Preparing:
                    <button type="button" value="2" onclick="statusButtonClick(this, @Model.OrderId)">Preparing</button>
                    break;
                case DotNetShopping.Models.Order.OrderStatuses.Prepared:
                    <input type="text" name="ShippingCode" id="ShippingCode" />
                    <button type="button" value="3" onclick="statusButtonClick(this, @Model.OrderId)">Prepared</button>
                    break;
                case DotNetShopping.Models.Order.OrderStatuses.Shipped:
                    <span>Shippped :  @Model.ShippingCode</span>
                    break;
                default:
                    break;
            }
        </td>
    </tr>
    @if(User.IsInRole("Admin"))
    {

   
    <tr>
        <td>Admin</td>
        <td>
        @Html.EnumDropDownListFor(model => model.OrderStatus, htmlAttributes: new { @class = "form-control" })
            <button type="button" onclick="saveButtonClick(@Model.OrderId)">Update</button>
        </td>
        
    </tr>
    }
</table>
<table class="orderTable table">
    <thead>
        <tr>
            <th></th>
            <th>Name</th>
            <th>Quantity</th>
            <th>Unit Price</th>
            <th>Total Price</th>
        </tr>
    </thead>
    <tbody>
        @foreach (DotNetShopping.Models.OrderProductListModel item in Model.OrderProducts)
        {
            var productName = DotNetShopping.Helpers.StringHelper.ClearFileName(item.VariantName + " " + item.ProductName);
            <tr onclick="window.location='@Url.Action("Product", "ProductDetail", new { id=item.VariantId, name = productName})';">
                <td><img src="~/ProductImage/@(item.FileName)-1.jpg" /></td>
                <td>@item.VariantName @item.ProductName</td>
                <td>@item.Quantity</td>
                <td>$@item.UnitPrice</td>
                <td>$@item.TotalPrice</td>
            </tr>
        }
    </tbody>
</table>

@section scripts{

    <script src="~/Scripts/order.js"></script>
}